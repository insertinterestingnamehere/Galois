# if(("${CMAKE_VERSION}" VERSION_GREATER 3.8.0) OR ("${CMAKE_VERSION}" VERSION_EQUAL 3.8.0))
  add_subdirectory(util)

  app(fmm fmm.cpp speed_function.cpp boundary.cpp)
  set_property(TARGET fmm PROPERTY CXX_STANDARD 17)
  set_property(TARGET fmm APPEND PROPERTY COMPILE_FLAGS " -Werror=unused ")
  target_link_libraries(fmm PUBLIC google-segystack PUBLIC numpy-cpp)
  # find_package(Eigen3 CONFIG)
  # if(Eigen3_FOUND)
  #   target_link_libraries(fmm PRIVATE Eigen3::Eigen)
  #   target_compile_definitions(fmm PRIVATE -DHAS_EIGEN)
  #   # if("${Eigen3_VERSION}" VERSION_LESS 3.3.90)
  #   #   target_compile_definitions(fmm PRIVATE -DEIGEN_OLD_ITERATOR)
  #   # endif()
  # endif()

  app(fastmarchingmethod-triangles-2d fmm_triangles_2d.cpp speed_function.cpp boundary.cpp)
  set_property(TARGET fastmarchingmethod-triangles-2d PROPERTY CXX_STANDARD 17)
  set_property(TARGET fastmarchingmethod-triangles-2d APPEND PROPERTY COMPILE_FLAGS " -Werror=unused ")
# else()
#   message(WARNING "Cannot configure sweeps or other C++17 apps with a CMake version older than 3.8. Skipping.")
# endif()

app(fmm_structured fmm_structured.cpp)
set_property(TARGET fmm_structured PROPERTY CXX_STANDARD 17)
target_link_libraries(fmm_structured PRIVATE numpy-cpp)
target_include_directories(fmm_structured PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/util")
